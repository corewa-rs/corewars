$schema: 'https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json'
name: Redcode
scopeName: source.redcode
patterns:
  - include: '#directive'
  - include: '#eof'
  - include: '#opcode'
  - include: '#field'
  - include: '#label'

repository:
  builtin:
    patterns:
      - name: constant.language.88.redcode
        match: \b(CORESIZE|MAXPROCESSES|MAXCYCLES|MAXLENGTH)\b
      - name: constant.language.94.redcode
        match: \b(MINDISTANCE|ROUNDS|CURLINE|VERSION|WARRIORS)\b
      - name: constant.language.p-space.redcode
        match: \b(PSPACESIZE)\b

  directive:
    begin: '(;)'
    beginCaptures:
      '1':
        name: comment.line.semicolon.redcode
    end: '$'
    patterns:
      - include: '#directive_with_argument'
      - name: keyword.operator.directive.main.redcode
        match: (?i)(redcode)(?!-)
      - name: keyword.operator.directive.koth.main.redcode
        match: (?i)(redcode-[a-zA-Z0-9]+)
      - name: keyword.operator.directive.debug.redcode
        match: (?i)(debug)[[:blank:]]+(off|static)
      - name: keyword.operator.directive.trace.redcode
        match: (?i)(trace)[[:blank:]]+(off)
      - name: comment.line.semicolon.redcode
        match: '.*'

  directive_with_argument:
    patterns:
      - match: (?i)(assert)\b(.*)
        captures:
          '1':
            name: keyword.operator.directive.redcode
          '2':
            patterns:
              - include: '#expression'

      - match: (?i)(author|break|name)\b(.*)
        captures:
          '1':
            name: keyword.operator.directive.redcode
          '2':
            name: string.unquoted.directive.argument.redcode

      - match: (?i)(help|kill|status|strategy|test|password|newpasswd|newredcode|url|version|date)\b(.*)
        name: keyword.operator.directive.koth.redcode
        captures:
          '2':
            name: string.unquoted.directive.koth.argument.redcode

  eof:
    name: comment.block.end.redcode
    begin: '\b(END)\b(.*)'
    # no end defined, the rest of the file should be treated as a comment
    captures:
      '1':
        name: keyword.operator.control.psuedo-opcode.88.end.redcode
      '2':
        # Allow comments + expression on the same line
        patterns:
          - include: '#directive'
          - include: '#field'

  expression:
    name: expression
    patterns:
      - name: keyword.operator.math.redcode
        match: '[+\-*/%]'
      - name: keyword.operator.logical.redcode
        match: '[=<>&|!]'
      - name: constant.numeric.redcode
        match: \b\d+\b
      - include: '#builtin'
      - include: '#label'
      - include: '#paren_expression'

  field:
    patterns:
      - name: keyword.operator.address-mode.88.redcode
        match: '[#$@<]'
      - name: keyword.operator.address-mode.94.redcode
        match: '[>*{}]'
      - name: keyword.operator.modifier.redcode
        match: '(?i)\b(\.([ABFXI]|AB|BA))\b'
      - include: '#expression'

  label:
    patterns:
      - name: variable.redcode
        match: '\b([a-zA-Z_][a-zA-Z0-9_]*[:]?)\b'

  opcode:
    patterns:
      - name: keyword.operator.control.opcode.88.redcode
        match: (?i)\b(DAT|MOV|ADD|SUB|JMP|JMZ|JMN|DJN|SLT|CMP|SPL)\b
      - name: keyword.operator.control.opcode.94.redcode
        match: (?i)\b(MUL|DIV|MOD|SEQ|SNE|NOP)\b
      - name: keyword.operator.control.opcode.p-space.redcode
        match: (?i)\b(LDP|STP)\b
      - name: keyword.operator.control.psuedo-opcode.88.redcode
        match: (?i)\b(EQU|FOR|ROF)\b
      - name: keyword.operator.control.psuedo-opcode.94.redcode
        match: (?i)\b(ORG)\b
      - name: keyword.operator.control.psuedo-opcode.p-space.redcode
        match: (?i)\b(PIN)\b

  paren_expression:
    name: expression.group
    begin: '\('
    beginCaptures:
      '0':
        name: punctuation.paren.open.redcode
    end: '\)'
    endCaptures:
      '0':
        name: punctuation.paren.open.redcode
    patterns:
      - include: '#expression'
