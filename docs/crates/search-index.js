var N=null,E="",T="t",U="u",searchIndex={};
var R=["parsedprogram","corewa_rs::cli","result","IO_SENTINEL","corewa_rs","__private_field","instruction","option","usize","string","corewa_rs::load_file","iter_values","DEFAULT_CONSTANTS","resolve","modifier","Instruction","Modifier","AddressMode","corewa_rs::parser","try_from","try_into","borrow_mut","type_id","borrow","typeid","to_owned","clone_into","to_string","corewa_rs::load_file::program","corewa_rs::load_file::types","corewa_rs::parser::grammar","opcode","addressmode","default","ordering","formatter","from_str","hashmap","initialize","from_clap","argmatches","augment_clap","is_subcommand","CliOptions","Program","ParsedProgram"];

searchIndex["corewa_rs"]={"doc":E,"i":[[5,"parse",R[4],E,N,[[["str"]],[[R[2],[R[0],"error"]],[R[0]],["error"]]]],[0,"cli",E,E,N,N],[3,R[3],R[1],E,N,N],[12,R[5],E,E,0,N],[3,R[43],E,"Parse, assemble, and save Redcode files",N,N],[12,"input_file",E,"Input file; use '-' to read from stdin",1,N],[12,"command",E,E,1,N],[4,"Command",E,E,N,N],[13,"Dump",E,"Save/print a program in 'load file' format",2,N],[12,"output_file","corewa_rs::cli::Command","Output file; defaults to stdout ('-')",2,N],[12,"no_expand",E,"Whether labels, expressions, macros, etc. should beâ€¦",2,N],[5,"run",R[1],E,N,[[],[[R[2],["box"]],["box",["error"]]]]],[7,R[3],E,E,N,N],[0,"util",R[4],E,N,N],[0,"load_file",E,E,N,N],[3,R[12],R[10],E,N,N],[12,R[5],E,E,3,N],[3,"Field",E,E,N,N],[12,"address_mode",E,E,4,N],[12,"value",E,E,4,N],[3,R[15],E,E,N,N],[12,R[31],E,E,5,N],[12,R[14],E,E,5,N],[12,"field_a",E,E,5,N],[12,"field_b",E,E,5,N],[0,"program",E,E,N,N],[3,R[44],R[28],E,N,N],[12,"instructions",E,E,6,N],[12,"resolved",E,E,6,N],[12,"labels",E,E,6,N],[12,"origin",E,E,6,N],[6,"Instructions",E,E,N,N],[6,"LabelMap",E,E,N,N],[11,"new",E,E,6,[[],["self"]]],[11,"with_capacity",E,E,6,[[[R[8]]],["self"]]],[11,"get",E,E,6,[[["self"],[R[8]]],[[R[7],[R[6]]],[R[6]]]]],[11,"set",E,E,6,[[["self"],[R[8]],[R[6]]]]],[11,"set_origin",E,E,6,[[["self"],["field"]]]],[11,"get_origin",E,E,6,[[["self"]],[["field"],[R[7],["field"]]]]],[11,"add_label",E,E,6,[[["self"],[R[8]],[R[9]]],[[R[2],[R[9]]],[R[9]]]]],[11,"label_address",E,E,6,[[["str"],["self"]],[[R[7],[R[8]]],[R[8]]]]],[11,R[13],E,E,6,[[["self"]],[[R[2],[R[9]]],["self"],[R[9]]]]],[0,"types",R[10],E,N,N],[4,"Opcode",R[29],E,N,N],[13,"Dat",E,E,7,N],[13,"Mov",E,E,7,N],[13,"Add",E,E,7,N],[13,"Sub",E,E,7,N],[13,"Mul",E,E,7,N],[13,"Div",E,E,7,N],[13,"Mod",E,E,7,N],[13,"Jmp",E,E,7,N],[13,"Jmz",E,E,7,N],[13,"Jmn",E,E,7,N],[13,"Djn",E,E,7,N],[13,"Cmp",E,E,7,N],[13,"Seq",E,E,7,N],[13,"Sne",E,E,7,N],[13,"Slt",E,E,7,N],[13,"Spl",E,E,7,N],[13,"Nop",E,E,7,N],[13,"Org",E,E,7,N],[4,R[16],E,E,N,N],[13,"A",E,E,8,N],[13,"B",E,E,8,N],[13,"AB",E,E,8,N],[13,"BA",E,E,8,N],[13,"F",E,E,8,N],[13,"X",E,E,8,N],[13,"I",E,E,8,N],[4,R[17],E,E,N,N],[13,"Immediate",E,E,9,N],[13,"Direct",E,E,9,N],[13,"IndirectA",E,E,9,N],[13,"IndirectB",E,E,9,N],[13,"PreDecIndirectA",E,E,9,N],[13,"PreDecIndirectB",E,E,9,N],[13,"PostIncIndirectA",E,E,9,N],[13,"PostIncIndirectB",E,E,9,N],[4,"Value",E,E,N,N],[13,"Label",E,E,10,N],[13,"Literal",E,E,10,N],[11,R[11],E,E,7,[[],["iter"]]],[11,R[11],E,E,8,[[],["iter"]]],[11,"default_88_to_94",E,E,8,[[[R[32]],[R[31]]],["self"]]],[11,R[11],E,E,9,[[],["iter"]]],[7,R[12],R[10],E,N,N],[11,"direct",E,E,4,[[["i32"]],["self"]]],[11,"direct_label",E,E,4,[[["tostring"]],["self"]]],[11,"immediate",E,E,4,[[["i32"]],["self"]]],[11,R[13],E,E,4,[[[R[37]],["self"],[R[8]]],[[R[2],[R[9]]],[R[9]]]]],[11,"new",E,E,5,[[[R[31]],["field"]],["self"]]],[11,R[13],E,E,5,[[[R[37]],["self"],[R[8]]],[[R[2],[R[9]]],[R[9]]]]],[0,"parser",R[4],E,N,N],[3,"Error",R[18],E,N,N],[12,"details",E,E,11,N],[3,R[45],E,E,N,N],[12,R[2],E,E,12,N],[12,"warnings",E,E,12,N],[5,"parse",E,E,N,[[["str"]],[[R[2],[R[0],"error"]],[R[0]],["error"]]]],[5,"parse_instruction",E,E,N,[[["pairs",["rule"]],["rule"]],[R[6]]]],[5,"parse_modifier",E,E,N,[[["pair"]],[R[14]]]],[5,"parse_opcode",E,E,N,[[["pair"]],[R[31]]]],[5,"parse_field",E,E,N,[[["pair",["rule"]],["rule"]],["field"]]],[5,"parse_value",E,E,N,[[["pair",["rule"]],["rule"]],["value"]]],[0,"grammar",E,E,N,N],[3,"Grammar",R[30],E,N,N],[4,"Rule",E,E,N,N],[13,"EOI",E,E,13,N],[13,"WHITESPACE",E,E,13,N],[13,"COMMENT",E,E,13,N],[13,R[44],E,E,13,N],[13,"EndProgram",E,E,13,N],[13,"Line",E,E,13,N],[13,R[15],E,E,13,N],[13,"LabelDeclaration",E,E,13,N],[13,"Label",E,E,13,N],[13,"Operation",E,E,13,N],[13,"Field",E,E,13,N],[13,"Opcode",E,E,13,N],[13,R[16],E,E,13,N],[13,R[17],E,E,13,N],[13,"Expr",E,E,13,N],[13,"Number",E,E,13,N],[13,"Alpha",E,E,13,N],[13,"Alphanumeral",E,E,13,N],[5,"parse",E,E,N,[[["rule"],["str"]],[[R[2],["pairs","error"]],["pairs",["rule"]],["error",["rule"]]]]],[17,"_PEST_GRAMMAR_Grammar",E,E,N,N],[8,"IntoError",R[18],E,N,N],[11,"no_input",E,E,11,[[],["error"]]],[11,"into",R[1],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[19],E,E,0,[[[U]],[R[2]]]],[11,R[20],E,E,0,[[],[R[2]]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[21],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"]],[R[24]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[19],E,E,1,[[[U]],[R[2]]]],[11,R[20],E,E,1,[[],[R[2]]]],[11,R[23],E,E,1,[[["self"]],[T]]],[11,R[21],E,E,1,[[["self"]],[T]]],[11,R[22],E,E,1,[[["self"]],[R[24]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[19],E,E,2,[[[U]],[R[2]]]],[11,R[20],E,E,2,[[],[R[2]]]],[11,R[23],E,E,2,[[["self"]],[T]]],[11,R[21],E,E,2,[[["self"]],[T]]],[11,R[22],E,E,2,[[["self"]],[R[24]]]],[11,"into",R[10],E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[19],E,E,3,[[[U]],[R[2]]]],[11,R[20],E,E,3,[[],[R[2]]]],[11,R[23],E,E,3,[[["self"]],[T]]],[11,R[21],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"]],[R[24]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[25],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"],[T]]]],[11,R[27],E,E,4,[[["self"]],[R[9]]]],[11,R[19],E,E,4,[[[U]],[R[2]]]],[11,R[20],E,E,4,[[],[R[2]]]],[11,R[23],E,E,4,[[["self"]],[T]]],[11,R[21],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"]],[R[24]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[25],E,E,5,[[["self"]],[T]]],[11,R[26],E,E,5,[[["self"],[T]]]],[11,R[27],E,E,5,[[["self"]],[R[9]]]],[11,R[19],E,E,5,[[[U]],[R[2]]]],[11,R[20],E,E,5,[[],[R[2]]]],[11,R[23],E,E,5,[[["self"]],[T]]],[11,R[21],E,E,5,[[["self"]],[T]]],[11,R[22],E,E,5,[[["self"]],[R[24]]]],[11,"into",R[28],E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[27],E,E,6,[[["self"]],[R[9]]]],[11,R[19],E,E,6,[[[U]],[R[2]]]],[11,R[20],E,E,6,[[],[R[2]]]],[11,R[23],E,E,6,[[["self"]],[T]]],[11,R[21],E,E,6,[[["self"]],[T]]],[11,R[22],E,E,6,[[["self"]],[R[24]]]],[11,"into",R[29],E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[25],E,E,7,[[["self"]],[T]]],[11,R[26],E,E,7,[[["self"],[T]]]],[11,R[27],E,E,7,[[["self"]],[R[9]]]],[11,R[19],E,E,7,[[[U]],[R[2]]]],[11,R[20],E,E,7,[[],[R[2]]]],[11,R[23],E,E,7,[[["self"]],[T]]],[11,R[21],E,E,7,[[["self"]],[T]]],[11,R[22],E,E,7,[[["self"]],[R[24]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[25],E,E,8,[[["self"]],[T]]],[11,R[26],E,E,8,[[["self"],[T]]]],[11,R[27],E,E,8,[[["self"]],[R[9]]]],[11,R[19],E,E,8,[[[U]],[R[2]]]],[11,R[20],E,E,8,[[],[R[2]]]],[11,R[23],E,E,8,[[["self"]],[T]]],[11,R[21],E,E,8,[[["self"]],[T]]],[11,R[22],E,E,8,[[["self"]],[R[24]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[25],E,E,9,[[["self"]],[T]]],[11,R[26],E,E,9,[[["self"],[T]]]],[11,R[27],E,E,9,[[["self"]],[R[9]]]],[11,R[19],E,E,9,[[[U]],[R[2]]]],[11,R[20],E,E,9,[[],[R[2]]]],[11,R[23],E,E,9,[[["self"]],[T]]],[11,R[21],E,E,9,[[["self"]],[T]]],[11,R[22],E,E,9,[[["self"]],[R[24]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[25],E,E,10,[[["self"]],[T]]],[11,R[26],E,E,10,[[["self"],[T]]]],[11,R[27],E,E,10,[[["self"]],[R[9]]]],[11,R[19],E,E,10,[[[U]],[R[2]]]],[11,R[20],E,E,10,[[],[R[2]]]],[11,R[23],E,E,10,[[["self"]],[T]]],[11,R[21],E,E,10,[[["self"]],[T]]],[11,R[22],E,E,10,[[["self"]],[R[24]]]],[11,"into",R[18],E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[27],E,E,11,[[["self"]],[R[9]]]],[11,R[19],E,E,11,[[[U]],[R[2]]]],[11,R[20],E,E,11,[[],[R[2]]]],[11,R[23],E,E,11,[[["self"]],[T]]],[11,R[21],E,E,11,[[["self"]],[T]]],[11,R[22],E,E,11,[[["self"]],[R[24]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[27],E,E,12,[[["self"]],[R[9]]]],[11,R[19],E,E,12,[[[U]],[R[2]]]],[11,R[20],E,E,12,[[],[R[2]]]],[11,R[23],E,E,12,[[["self"]],[T]]],[11,R[21],E,E,12,[[["self"]],[T]]],[11,R[22],E,E,12,[[["self"]],[R[24]]]],[11,"into",R[30],E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[19],E,E,14,[[[U]],[R[2]]]],[11,R[20],E,E,14,[[],[R[2]]]],[11,R[23],E,E,14,[[["self"]],[T]]],[11,R[21],E,E,14,[[["self"]],[T]]],[11,R[22],E,E,14,[[["self"]],[R[24]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[25],E,E,13,[[["self"]],[T]]],[11,R[26],E,E,13,[[["self"],[T]]]],[11,R[19],E,E,13,[[[U]],[R[2]]]],[11,R[20],E,E,13,[[],[R[2]]]],[11,R[23],E,E,13,[[["self"]],[T]]],[11,R[21],E,E,13,[[["self"]],[T]]],[11,R[22],E,E,13,[[["self"]],[R[24]]]],[11,"from",R[18],E,11,[[[T]],["self"]]],[11,"clone",R[29],E,7,[[["self"]],[R[31]]]],[11,"clone",E,E,8,[[["self"]],[R[14]]]],[11,"clone",E,E,9,[[["self"]],[R[32]]]],[11,"clone",E,E,10,[[["self"]],["value"]]],[11,"clone",R[10],E,4,[[["self"]],["field"]]],[11,"clone",E,E,5,[[["self"]],[R[6]]]],[11,"clone",R[30],E,13,[[["self"]],["rule"]]],[11,R[33],R[28],E,6,[[],["self"]]],[11,R[33],R[29],E,7,[[],["self"]]],[11,R[33],E,E,8,[[],["self"]]],[11,R[33],E,E,9,[[],["self"]]],[11,R[33],E,E,10,[[],["self"]]],[11,R[33],R[10],E,4,[[],["self"]]],[11,R[33],E,E,5,[[],[R[6]]]],[11,"assert_receiver_is_total_eq",R[30],E,13,[[["self"]]]],[11,"cmp",E,E,13,[[["self"],["rule"]],[R[34]]]],[11,"eq",R[28],E,6,[[["self"]],["bool"]]],[11,"eq",R[29],E,7,[[["self"],[R[31]]],["bool"]]],[11,"eq",E,E,8,[[["self"],[R[14]]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[32]]],["bool"]]],[11,"eq",E,E,10,[[["self"],["value"]],["bool"]]],[11,"ne",E,E,10,[[["self"],["value"]],["bool"]]],[11,"eq",R[10],E,4,[[["field"],["self"]],["bool"]]],[11,"ne",E,E,4,[[["field"],["self"]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[6]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[6]]],["bool"]]],[11,"eq",R[30],E,13,[[["self"],["rule"]],["bool"]]],[11,"eq",R[18],E,11,[[["error"],["self"]],["bool"]]],[11,"ne",E,E,11,[[["error"],["self"]],["bool"]]],[11,"partial_cmp",R[30],E,13,[[["self"],["rule"]],[[R[34]],[R[7],[R[34]]]]]],[11,"fmt",R[28],E,6,[[["self"],[R[35]]],[R[2]]]],[11,"fmt",R[29],E,7,[[["self"],[R[35]]],[R[2]]]],[11,"fmt",E,E,8,[[["self"],[R[35]]],[R[2]]]],[11,"fmt",E,E,9,[[["self"],[R[35]]],[R[2]]]],[11,"fmt",E,E,10,[[["self"],[R[35]]],[R[2]]]],[11,"fmt",R[10],E,4,[[["self"],[R[35]]],[R[2]]]],[11,"fmt",E,E,5,[[["self"],[R[35]]],[R[2]]]],[11,"fmt",R[18],E,11,[[["self"],[R[35]]],[R[2]]]],[11,"fmt",E,E,12,[[["self"],[R[35]]],[R[2]]]],[11,"fmt",R[1],E,1,[[["self"],[R[35]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[35]]],[R[2]]]],[11,"fmt",R[28],E,6,[[["self"],[R[35]]],[R[2]]]],[11,"fmt",R[29],E,7,[[["self"],[R[35]]],[R[2]]]],[11,"fmt",E,E,8,[[["self"],[R[35]]],[R[2]]]],[11,"fmt",E,E,9,[[["self"],[R[35]]],[R[2]]]],[11,"fmt",E,E,10,[[["self"],[R[35]]],[R[2]]]],[11,"fmt",R[10],E,4,[[["self"],[R[35]]],[R[2]]]],[11,"fmt",E,E,5,[[["self"],[R[35]]],[R[2]]]],[11,"fmt",R[30],E,13,[[["self"],[R[35]]],[R[2]]]],[11,"fmt",R[18],E,11,[[["self"],[R[35]]],[R[2]]]],[11,"fmt",E,E,12,[[["self"],[R[35]]],[R[2]]]],[11,R[36],R[29],E,7,[[["str"]],[R[2]]]],[11,R[36],E,E,8,[[["str"]],[R[2]]]],[11,R[36],E,E,9,[[["str"]],[R[2]]]],[11,"deref",R[1],E,0,[[["self"]],["pathbuf"]]],[11,"deref",R[10],E,3,[[["self"]],[R[37]]]],[11,"hash",R[30],E,13,[[["self"],["__h"]]]],[11,R[38],R[1],E,0,[[["self"]]]],[11,R[38],R[10],E,3,[[["self"]]]],[11,"parse",R[30],E,14,[[["rule"],["str"]],[["pairs",["rule"]],[R[2],["pairs","error"]],["error",["rule"]]]]],[11,"clap",R[1],E,1,[[],["app"]]],[11,R[39],E,E,1,[[[R[40]]],["self"]]],[11,"clap",E,E,2,[[],["app"]]],[11,R[39],E,E,2,[[[R[40]]],["self"]]],[11,R[41],E,E,1,[[["app"]],["app"]]],[11,R[42],E,E,1,[[],["bool"]]],[11,R[41],E,E,2,[[["app"]],["app"]]],[11,"from_subcommand",E,E,2,[[],[R[7]]]],[11,R[42],E,E,2,[[],["bool"]]]],"p":[[3,R[3]],[3,R[43]],[4,"Command"],[3,R[12]],[3,"Field"],[3,R[15]],[3,R[44]],[4,"Opcode"],[4,R[16]],[4,R[17]],[4,"Value"],[3,"Error"],[3,R[45]],[4,"Rule"],[3,"Grammar"]]};
searchIndex["testutils"]={"doc":E,"i":[[14,"assert_that","testutils","Simple macro to panic with a prettier error message",N,N]],"p":[]};
initSearch(searchIndex);addSearchOptions(searchIndex);